
IZVEIDOT REZERVĀCIJAS LAPU, KAS PIEŅEM VĀRDU UN UZVĀRDU UN IERAKSTA TOS DATUBĀZĒ
(jāizveido lapa, kur var reģistrēt vārdu un uzvārdu)

Q1: Vai vajadzīgs HTML kods?
A1: bus vajadzīgs html kods

MARK: php būs jāraksta funkcija(s), kura(s) saglabās ievadītos datus

I1: Var izmantot kalkulātora kodu, lai info saglabājas log.txt
A: Nesaglabāsim datus iekš log.txt, bet iekš datubāzes

Q2: mēs to taisīsim caur php vai mySQL?
A2: Izmantosim PHP, lai saglabātu datus mySql datubāzē.

Q3: Ar ko sākt? Q4: Kādā secībā veikt darbības?
- izveidot html kodu, lai būtu kur ievadīt informāciju,
- tad rakstīt php kodu, lai ar to informāciju varētu kaut ko darīt

Q4: Kā nosaukt failu?
index.php (galvenā lapa, kur mēs ievietosim  gan html, gan php kodu)

Q5: Kādu uzdevumu pildīs ieveitotais HTML kods?
- html līdzīgi kā reservation_table.php (names.php)
- HTML izveido formu caur kuru var iesniegt datus.

I: HTML rakstīt atsevišķā failā (piem. view.php) un caur include, require_once ievietot HTML iekš index.php

Task: Izveidot registration.php - kurš saturēs loģiku, kas apstrādās un saglabās datus


isset($mainigais) - pārbauda vai mainīgais ir istadīts (is set == ir iestadīts)
is_string($mainigais) - pārbauda vai vērtība ir tekstuāla

----------------------
firstname[first]: 11
firstname[]: 22

$_POST['firstname'] = ["first" => 11, 22]

----------------------
empty($mainigais) - vai vērtība ir tukša

empty(1) - false
empty([]) - true
empty("Sveiki pasaule!") - false

!empty(1) - true

(empty([]) == false) - false

ne paties = aplams
!true == false

!false == true
----------------------

class A {}

new - nozīmē konstruēt jaunu objektu no klases

$obj_1 = new A();

$obj_2 = new A();

----------------------
echo "Hello World"; ir tas pats kas HTML failā: Hello World

PHP: echo "<h1>Hello World</h1>";
HTML: <h1>Hello World</h1>

PHP: print("<h1>Hello World</h1>");
HTML: <h1>Hello World</h1>

----------------------
class Exception {
  public function getMessage() {
    ...
  }
  ...
}

$e = new Exception();

$e->getMessage();


----------------------


 try {
    if (
      isset($_POST['firstname']) && isset($_POST['lastname'])
      && is_string($_POST['firstname']) && is_string($_POST['lastname'])
      && !empty($_POST['firstname']) && !empty($_POST['lastname'])
    ) {
      $registration_manager = new Registration();
      $registration_manager->register($_POST['firstname'], $_POST['lastname']);
      echo "Reģistrācija noritēja veiksmīgi";
    }
  }
  catch (Exception $e) {
    echo $e->getMessage();
  }



--------------------------
Example

<?php

class A {
  public function get() {
    return [
      $this
    ];
  }

  public function second() {
    return "hello world";
  }
}

$obj = new A();

echo $obj->get()[0]->get()[0]->get()[0]->get()[0]->get()[0]->get()[0]->get()[0]->second();

echo "<br>";
echo $obj->second();


?>
